#! /usr/bin/bash

#
# Pipeline Core Methods
#

#
# String Formatting
#

# Emit Status With Consistent Spacing
format_status () {
    # Remove Extra Whitespace
    local status=$(echo $1 | sed 's|\s+|\s|g')
    echo -e "\n$status\n"
    return $?
}

#
# State Management Methods
#

# Write State to State File
put_state () {
    local statuscode=$1
    local state=$2
    # Update State on Exit
    if [ $statuscode = 0 ]; then
        # Export Pipeline State
        echo "$state" >> $PIPELINE_HOME/core/pipeline.state
        format_status "State Registered: $state"
        return $statuscode
    else
        # If an Error Occurred Exit
        format_status "Unexpected Error $statuscode: $state"
        exit $statuscode
    fi
}

# Test: Has State Already Been Executed
has_state () {
    local state=$1
    grep -q "$state" $PIPELINE_HOME/core/pipeline.state
    local status=$?
    if [ $status = 0 ]; then
        format_status "Skipping Step â€“ $state"
    fi
    return $status
}
